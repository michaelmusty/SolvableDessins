load "doob.mag";

a,b,c := SolvableDBStatus(32);

// bad
bad := [];
Append(~bad, "32S9-8,4,2-g3-path11");
Append(~bad, "32S10-4,4,8-g7-path8");
Append(~bad, "32S10-4,8,4-g7-path10");

// make list b without bad
bb := [];
for i := 1 to #b do
  if not (b[i]`SolvableDBName in bad) then
    Append(~bb, b[i]);
  end if;
end for;

// main
for i := 1 to #bb do
  s := bb[i];
  s := SolvableBelyiMap(s);
  before, after := SolvableLowDegreeModel(s);
  printf "\nLocal sanity checking %o:\n", s`SolvableDBName;
  t0 := Cputime();
  assert SolvableLocalSanityCheck(after, 101);
  t1 := Cputime();
  printf "done. %o seconds.\n", t1-t0;
  assert assigned after`SolvableDBLocalSanityCheckTiming;
  assert assigned after`SolvableDBLocalSanityCheckPrime;
  SolvableDBWriteObject(after);
  filename := after`SolvableDBFilename;
  t := SolvableDBAccessEntry(filename);
  printf "\nSanity checking again...\n";
  printf "\nLocal sanity checking %o again:\n", s`SolvableDBName;
  t0 := Cputime();
  assert SolvableLocalSanityCheck(t, 101);
  t1 := Cputime();
  printf "done. %o seconds.\n", t1-t0;
  assert assigned t`SolvableDBBelyiMapTiming;
  assert assigned t`SolvableDBLowDegreeTiming;
  assert assigned t`SolvableDBLocalSanityCheckTiming;
  assert assigned t`SolvableDBLocalSanityCheckPrime;
end for;
