s := SolvableDBObjectInitialize();

/*
Basic Information about the Passport
*/

s`SolvableDBName := "16T4-4,4,4-g3-path4";
s`SolvableDBFilename := "16T4-4,4,4-g3-path4.m";
s`SolvableDBPathNumber := 4;
s`SolvableDBDegree := 16;
s`SolvableDBABC := \[ 4, 4, 4 ];
s`SolvableDBType := "Hyperbolic";
s`SolvableDBGenus := 3;
s`SolvableDBGaloisOrbitSize := 1;
s`SolvableDBPassportSize := 1;
s`SolvableDBPointedPassportSize := 1;
s`SolvableDBLevel := 4;
s`SolvableDBBlocks := {@ PowerSet(IntegerRing()) |
{ IntegerRing() | 1, 5 },
{ IntegerRing() | 2, 6 },
{ IntegerRing() | 3, 12 },
{ IntegerRing() | 4, 15 },
{ IntegerRing() | 7, 10 },
{ IntegerRing() | 8, 9 },
{ IntegerRing() | 11, 14 },
{ IntegerRing() | 13, 16 }
@};
s`SolvableDBBelyiMapTiming := 0.260p15;
s`SolvableDBSanityCheckTiming := 0.300p15;
s`SolvableDBLocalSanityCheckTiming := 0.030p15;
s`SolvableDBLocalSanityCheckPrime := 101;
s`SolvableDBIsLowGenusOrHyperelliptic := true;
s`SolvableDBIsRamifiedAtEveryLevel := true;

/*
Permutations and Passports
*/

s`SolvableDBGaloisOrbit := [ PowerSequence(PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 >) |
[ PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 > |
[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
[ 3, 9, 11, 2, 12, 8, 1, 13, 16, 5, 7, 14, 15, 10, 6, 4 ],
[ 4, 10, 2, 14, 15, 7, 16, 1, 5, 13, 9, 6, 3, 8, 11, 12 ]
]
];
s`SolvableDBPassport := [ PowerSequence(PermutationGroup<16 |  
\[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
\[ 3, 9, 11, 2, 12, 8, 1, 13, 16, 5, 7, 14, 15, 10, 6, 4 ],
\[ 4, 10, 2, 14, 15, 7, 16, 1, 5, 13, 9, 6, 3, 8, 11, 12 ]:
 Order := 16 >) |
[ PermutationGroup<16 |  
\[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
\[ 3, 9, 11, 2, 12, 8, 1, 13, 16, 5, 7, 14, 15, 10, 6, 4 ],
\[ 4, 10, 2, 14, 15, 7, 16, 1, 5, 13, 9, 6, 3, 8, 11, 12 ]:
 Order := 16 > |
[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
[ 7, 4, 1, 16, 10, 15, 11, 6, 2, 14, 3, 5, 8, 12, 13, 9 ],
[ 9, 12, 16, 5, 8, 3, 2, 11, 14, 6, 4, 13, 7, 15, 1, 10 ]
]
];
s`SolvableDBPointedPassport := [ PowerSequence(PermutationGroup<16 |  
\[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
\[ 3, 9, 11, 2, 12, 8, 1, 13, 16, 5, 7, 14, 15, 10, 6, 4 ],
\[ 4, 10, 2, 14, 15, 7, 16, 1, 5, 13, 9, 6, 3, 8, 11, 12 ]:
 Order := 16 >) |
[ PermutationGroup<16 |  
\[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
\[ 3, 9, 11, 2, 12, 8, 1, 13, 16, 5, 7, 14, 15, 10, 6, 4 ],
\[ 4, 10, 2, 14, 15, 7, 16, 1, 5, 13, 9, 6, 3, 8, 11, 12 ]:
 Order := 16 > |
[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
[ 7, 4, 1, 16, 10, 15, 11, 6, 2, 14, 3, 5, 8, 12, 13, 9 ],
[ 9, 12, 16, 5, 8, 3, 2, 11, 14, 6, 4, 13, 7, 15, 1, 10 ]
]
];
s`SolvableDBMonodromyGroup := PermutationGroup<16 |  
\[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
\[ 3, 9, 11, 2, 12, 8, 1, 13, 16, 5, 7, 14, 15, 10, 6, 4 ],
\[ 4, 10, 2, 14, 15, 7, 16, 1, 5, 13, 9, 6, 3, 8, 11, 12 ] >;
s`SolvableDBAutomorphismGroup := PermutationGroup<16 |  
\[ 6, 1, 8, 7, 2, 5, 15, 12, 3, 4, 13, 9, 14, 16, 10, 11 ],
\[ 16, 14, 4, 12, 13, 11, 9, 7, 10, 8, 2, 15, 1, 6, 3, 5 ],
\[ 3, 9, 11, 2, 12, 8, 1, 13, 16, 5, 7, 14, 15, 10, 6, 4 ]:
 Order := 16 >;
s`SolvableDBPointedAutomorphismGroup := PermutationGroup<16 |  
\[ 2, 5, 9, 10, 6, 1, 4, 3, 12, 15, 16, 8, 11, 13, 7, 14 ]:
 Order := 4 >;

/*
Top Level Belyi Curve/Map
*/

f, g := Explode([ PolynomialRing(ext<K|Polynomial(K, [1, 0, 0, 0, 1])> where K is RationalField()) |
[[ RationalField() | -134217728/4096128001, 0, 0, 0 ], [ RationalField() | 0, 0, -268435456/4096128001, 0 ], [ RationalField() | 33554432/585161143, 0, 0, 0 ], [ RationalField() | 0, 0, 16777216/585161143, 0 ], [ RationalField() | 768606208/4096128001, 0, 0, 0 ], [ RationalField() | 0, 0, 797966336/4096128001, 0 ], [ RationalField() | -301072384/4096128001, 0, 0, 0 ], [ RationalField() | 0, 0, -50266112/4096128001, 0 ], [ RationalField() | -2048/64001, 0, 0, 0 ]],
[]
]);
X<x1,x2,x3> := HyperellipticCurve([f, g]);
K<nu> := BaseField(X);
s`SolvableDBBelyiCurve := X;
KX<x1, x2> := FunctionField(X);
s`SolvableDBBelyiMap := KX!((1/4228250625*(-526344224*nu^3 + 526344224*nu)*x1^12 + 1/1409416875*(-2818092032*nu^3 - 2818092032*nu)*x1^11 + 1/248720625*(3014703104*nu^3 - 3014703104*nu)*x1^10 + 1/31320375*(1048592384*nu^3 + 1048592384*nu)*x1^9 + 1/4228250625*(-170920558592*nu^3 + 170920558592*nu)*x1^8 + 1/4228250625*(-117442347008*nu^3 - 117442347008*nu)*x1^7 + 1/4228250625*(234884694016*nu^3 - 234884694016*nu)*x1^6 + 1/4228250625*(268439650304*nu^3 + 268439650304*nu)*x1^5 + 1/4228250625*(-134219825152*nu^3 + 134219825152*nu)*x1^4)/(x1^16 + 64/255*nu^2*x1^15 + 32128/21675*x1^14 - 61901824/16581375*nu^2*x1^13 - 10262733824/4228250625*x1^12 - 7240859648/1409416875*nu^2*x1^11 - 8250884096/845650125*x1^10 + 7687897088/845650125*nu^2*x1^9 - 2201878528/1409416875*x1^8 + 138412032/10440125*nu^2*x1^7 + 62469963776/4228250625*x1^6 - 738197504/93961125*nu^2*x1^5 + 13354663936/4228250625*x1^4 - 7516192768/845650125*nu^2*x1^3 - 2147483648/281883375*x1^2 + 17179869184/4228250625*nu^2*x1 + 4294967296/4228250625)*x2 + (2097152/4228250625*x1^16 - 67108864/4228250625*nu^2*x1^15 - 939524096/4228250625*x1^14 + 7516192768/4228250625*nu^2*x1^13 + 7516192768/845650125*x1^12 - 120259084288/4228250625*nu^2*x1^11 - 240518168576/4228250625*x1^10 + 274877906944/4228250625*nu^2*x1^9 + 137438953472/4228250625*x1^8)/(x1^16 + 64/255*nu^2*x1^15 + 32128/21675*x1^14 - 61901824/16581375*nu^2*x1^13 - 10262733824/4228250625*x1^12 - 7240859648/1409416875*nu^2*x1^11 - 8250884096/845650125*x1^10 + 7687897088/845650125*nu^2*x1^9 - 2201878528/1409416875*x1^8 + 138412032/10440125*nu^2*x1^7 + 62469963776/4228250625*x1^6 - 738197504/93961125*nu^2*x1^5 + 13354663936/4228250625*x1^4 - 7516192768/845650125*nu^2*x1^3 - 2147483648/281883375*x1^2 + 17179869184/4228250625*nu^2*x1 + 4294967296/4228250625));

/*
Graph Data
*/

s`SolvableDBPathToPP1 := [ Strings() | "PP1", "2T1-2,1,2-g0-path1", "4T2-2,2,2-g0-path2", "8T2-2,4,4-g1-path4", "16T4-4,4,4-g3-path4" ];
s`SolvableDBParents := [ Strings() | "32S3-8,4,8-g9-path10", "32S3-4,8,8-g9-path10", "32S3-8,8,4-g9-path10", "32S4-8,4,8-g9-path10", "32S4-4,8,8-g9-path10", "32S4-8,8,4-g9-path10", "32S2-4,4,4-g5-path43" ];
s`SolvableDBChildren := [ Strings() | "8T2-2,4,4-g1-path4" ];

/*
Return for eval
*/

return s;
