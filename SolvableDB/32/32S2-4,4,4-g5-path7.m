s := SolvableDBInitialize();

/*
Custom printing for Belyi curve and map
*/

/* Belyi curve */
K := Rationals();
P<[x]> := PolynomialRing(K, 3);
I<[x]> := ideal< P | [
x[2]^3*x[3]^2 + 20*x[2]^2*x[3]^2 + 1/2*x[1]^2*x[2] + 1/4*x[1]*x[2]^2 + 1/16*x[2]^3 + 96*x[1]*x[3]^2 + 112*x[2]*x[3]^2 + 4*x[1]^2 + 3*x[1]*x[2] + 5/4*x[2]^2 + 128*x[3]^2 - 6*x[1] - x[2] + 8,
x[1]^2*x[3]^2 - 1/2*x[2]^2*x[3]^2 - 4*x[1]*x[3]^2 - 4*x[2]*x[3]^2 - 3/16*x[1]^2 - 1/8*x[1]*x[2] - 1/32*x[2]^2 - 4*x[3]^2 + 1/4*x[1] - 1/4,
x[1]*x[2]*x[3]^2 - x[2]^2*x[3]^2 - 4*x[1]*x[3]^2 - 6*x[2]*x[3]^2 - 1/4*x[1]^2 - 3/16*x[1]*x[2] - 1/16*x[2]^2 - 8*x[3]^2 + 1/4*x[1] + 1/8*x[2] - 1/2,
x[1]^3 - x[2]^2 + 4*x[1]
] >;
X<[x]> := Curve(AffineSpace(P), I);

/* Belyi map */
K := Rationals();
P<[x]> := PolynomialRing(K, 3);
I<[x]> := ideal< P | [
x[2]^3*x[3]^2 + 20*x[2]^2*x[3]^2 + 1/2*x[1]^2*x[2] + 1/4*x[1]*x[2]^2 + 1/16*x[2]^3 + 96*x[1]*x[3]^2 + 112*x[2]*x[3]^2 + 4*x[1]^2 + 3*x[1]*x[2] + 5/4*x[2]^2 + 128*x[3]^2 - 6*x[1] - x[2] + 8,
x[1]^2*x[3]^2 - 1/2*x[2]^2*x[3]^2 - 4*x[1]*x[3]^2 - 4*x[2]*x[3]^2 - 3/16*x[1]^2 - 1/8*x[1]*x[2] - 1/32*x[2]^2 - 4*x[3]^2 + 1/4*x[1] - 1/4,
x[1]*x[2]*x[3]^2 - x[2]^2*x[3]^2 - 4*x[1]*x[3]^2 - 6*x[2]*x[3]^2 - 1/4*x[1]^2 - 3/16*x[1]*x[2] - 1/16*x[2]^2 - 8*x[3]^2 + 1/4*x[1] + 1/8*x[2] - 1/2,
x[1]^3 - x[2]^2 + 4*x[1]
] >;
X<[x]> := Curve(AffineSpace(P), I);
KX<[x]> := FunctionField(X);
phi := KX!((x[1]^8 + 48*x[1]^6 + 608*x[1]^4 + 768*x[1]^2 + 256)/(64*x[1]^6 + 512*x[1]^4 + 1024*x[1]^2));
/* assign to object */
s`SolvableDBBelyiCurve := X;
s`SolvableDBBelyiMap := phi;

/*
Magma printing
*/

s`SolvableDBName := "32S2-4,4,4-g5-path7";
s`SolvableDBFilename := "32S2-4,4,4-g5-path7.m";
s`SolvableDBPassportName := "32S2-4,4,4-g5";
s`SolvableDBPathNumber := 7;
s`SolvableDBDegree := 32;
s`SolvableDBOrders := \[ 4, 4, 4 ];
s`SolvableDBType := "Hyperbolic";
s`SolvableDBGenus := 5;
s`SolvableDBGaloisOrbitSize := 1;
s`SolvableDBPassportSize := 1;
s`SolvableDBPointedPassportSize := 1;
s`SolvableDBLevel := 5;
s`SolvableDBBlocks := {@ PowerSet(IntegerRing()) |
{ IntegerRing() | 1, 5 },
{ IntegerRing() | 2, 6 },
{ IntegerRing() | 3, 15 },
{ IntegerRing() | 4, 19 },
{ IntegerRing() | 7, 10 },
{ IntegerRing() | 8, 12 },
{ IntegerRing() | 9, 22 },
{ IntegerRing() | 11, 23 },
{ IntegerRing() | 13, 30 },
{ IntegerRing() | 14, 28 },
{ IntegerRing() | 16, 21 },
{ IntegerRing() | 17, 20 },
{ IntegerRing() | 18, 31 },
{ IntegerRing() | 24, 26 },
{ IntegerRing() | 25, 27 },
{ IntegerRing() | 29, 32 }
@};
s`SolvableDBBelyiMapTiming := 0.060p15;
s`SolvableDBLocalSanityCheckTiming := 0.390p15;
s`SolvableDBLocalSanityCheckPrime := 101;
s`SolvableDBIsLowGenusOrHyperelliptic := false;
s`SolvableDBIsRamifiedAtEveryLevel := true;
s`SolvableDBGaloisOrbit := [ PowerSequence(PermutationGroup<32 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ]:
 Order := 263130836933693530167218012160000000 >) |
[ PermutationGroup<32 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ]:
 Order := 263130836933693530167218012160000000 > |
[ 6, 1, 8, 20, 2, 5, 26, 15, 11, 24, 22, 3, 16, 32, 12, 30, 4, 25, 17, 19, 13, 23, 9, 7, 31, 10, 18, 29, 14, 21, 27, 28 ],
[ 3, 9, 13, 2, 15, 22, 1, 27, 21, 5, 31, 25, 7, 12, 30, 19, 29, 17, 6, 32, 4, 16, 18, 14, 24, 28, 26, 8, 23, 10, 20, 11 ],
[ 4, 10, 14, 18, 19, 7, 25, 1, 29, 27, 2, 5, 9, 17, 28, 3, 16, 8, 31, 21, 15, 32, 6, 30, 23, 13, 11, 20, 26, 22, 12, 24 ]
]
];
s`SolvableDBPassport := [ PowerSequence(PermutationGroup<32 |  
\[ 6, 1, 8, 20, 2, 5, 26, 15, 11, 24, 22, 3, 16, 32, 12, 30, 4, 25, 17, 19, 13, 23, 9, 7, 31, 10, 18, 29, 14, 21, 27, 28 ],
\[ 3, 9, 13, 2, 15, 22, 1, 27, 21, 5, 31, 25, 7, 12, 30, 19, 29, 17, 6, 32, 4, 16, 18, 14, 24, 28, 26, 8, 23, 10, 20, 11 ],
\[ 4, 10, 14, 18, 19, 7, 25, 1, 29, 27, 2, 5, 9, 17, 28, 3, 16, 8, 31, 21, 15, 32, 6, 30, 23, 13, 11, 20, 26, 22, 12, 24 ]:
 Order := 32 >) |
[ PermutationGroup<32 |  
\[ 6, 1, 8, 20, 2, 5, 26, 15, 11, 24, 22, 3, 16, 32, 12, 30, 4, 25, 17, 19, 13, 23, 9, 7, 31, 10, 18, 29, 14, 21, 27, 28 ],
\[ 3, 9, 13, 2, 15, 22, 1, 27, 21, 5, 31, 25, 7, 12, 30, 19, 29, 17, 6, 32, 4, 16, 18, 14, 24, 28, 26, 8, 23, 10, 20, 11 ],
\[ 4, 10, 14, 18, 19, 7, 25, 1, 29, 27, 2, 5, 9, 17, 28, 3, 16, 8, 31, 21, 15, 32, 6, 30, 23, 13, 11, 20, 26, 22, 12, 24 ]:
 Order := 32 > |
[ 6, 1, 8, 20, 2, 5, 26, 15, 11, 24, 22, 3, 16, 32, 12, 30, 4, 25, 17, 19, 13, 23, 9, 7, 31, 10, 18, 29, 14, 21, 27, 28 ],
[ 7, 4, 1, 21, 10, 19, 13, 28, 2, 30, 32, 14, 3, 24, 5, 22, 18, 23, 16, 31, 9, 6, 29, 25, 12, 27, 8, 26, 17, 15, 11, 20 ],
[ 9, 15, 25, 29, 22, 3, 14, 13, 18, 28, 21, 30, 4, 23, 27, 7, 6, 26, 32, 2, 10, 31, 16, 5, 17, 1, 20, 11, 8, 19, 24, 12 ]
]
];
s`SolvableDBPointedPassport := [ PowerSequence(PermutationGroup<32 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ]:
 Order := 263130836933693530167218012160000000 >) |
[ PermutationGroup<32 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ]:
 Order := 263130836933693530167218012160000000 > |
[ 28, 32, 22, 7, 14, 29, 19, 23, 3, 4, 8, 11, 27, 1, 9, 18, 24, 21, 10, 26, 31, 15, 12, 20, 13, 17, 30, 5, 2, 25, 16, 6 ],
[ 20, 24, 32, 25, 17, 26, 31, 6, 14, 18, 1, 2, 11, 4, 29, 8, 30, 15, 27, 13, 12, 28, 5, 21, 9, 16, 22, 19, 10, 23, 3, 7 ],
[ 9, 15, 25, 29, 22, 3, 14, 13, 18, 28, 21, 30, 4, 23, 27, 7, 6, 26, 32, 2, 10, 31, 16, 5, 17, 1, 20, 11, 8, 19, 24, 12 ]
]
];
s`SolvableDBMonodromyGroup := PermutationGroup<32 |  
\[ 6, 1, 8, 20, 2, 5, 26, 15, 11, 24, 22, 3, 16, 32, 12, 30, 4, 25, 17, 19, 13, 23, 9, 7, 31, 10, 18, 29, 14, 21, 27, 28 ],
\[ 3, 9, 13, 2, 15, 22, 1, 27, 21, 5, 31, 25, 7, 12, 30, 19, 29, 17, 6, 32, 4, 16, 18, 14, 24, 28, 26, 8, 23, 10, 20, 11 ],
\[ 4, 10, 14, 18, 19, 7, 25, 1, 29, 27, 2, 5, 9, 17, 28, 3, 16, 8, 31, 21, 15, 32, 6, 30, 23, 13, 11, 20, 26, 22, 12, 24 ] >;
s`SolvableDBAutomorphismGroup := PermutationGroup<32 |  
\[ 6, 1, 22, 7, 2, 5, 19, 23, 3, 4, 8, 11, 16, 32, 9, 30, 24, 25, 10, 26, 13, 15, 12, 20, 31, 17, 18, 29, 14, 21, 27, 28 ],
\[ 30, 16, 10, 22, 13, 21, 15, 24, 19, 3, 17, 26, 5, 27, 7, 2, 11, 32, 9, 23, 6, 4, 20, 8, 28, 12, 14, 25, 31, 1, 29, 18 ],
\[ 3, 12, 13, 14, 15, 8, 1, 16, 25, 5, 31, 21, 7, 9, 30, 26, 29, 17, 28, 32, 24, 27, 18, 2, 4, 6, 19, 22, 23, 10, 20, 11 ]:
 Order := 32 >;
s`SolvableDBPointedAutomorphismGroup := PermutationGroup<32 |  
\[ 2, 5, 9, 10, 6, 1, 4, 11, 15, 19, 12, 23, 21, 29, 22, 13, 26, 27, 7, 24, 30, 3, 8, 17, 18, 20, 31, 32, 28, 16, 25, 14 ]:
 Order := 4 >;
s`SolvableDBPathToPP1 := [ Strings() | "PP1", "2T1-1,2,2-g0-path1", "4T2-2,2,2-g0-path1", "8T4-2,4,2-g0-path1", "16T10-2,4,4-g1-path10", "32S2-4,4,4-g5-path7" ];
s`SolvableDBParents := [ Strings() | "64S20-8,4,4-g13-path55", "64S21-4,8,4-g13-path74", "64S25-8,8,4-g17-path11", "64S21-4,4,8-g13-path74", "64S17-8,4,8-g17-path52", "64S24-4,8,8-g17-path6", "64S22-8,8,8-g21-path82", "64S21-8,4,4-g13-path74", "64S18-4,8,4-g13-path6", "64S24-8,8,4-g17-path6", "64S20-4,4,8-g13-path55", "64S24-8,4,8-g17-path6", "64S25-4,8,8-g17-path11", "64S19-8,8,8-g21-path6", "64S20-8,4,4-g13-path56", "64S20-4,8,4-g13-path55", "64S17-8,8,4-g17-path52", "64S20-4,4,8-g13-path56", "64S25-8,4,8-g17-path11", "64S17-4,8,8-g17-path52", "64S22-8,8,8-g21-path83", "64S18-8,4,4-g13-path6", "64S20-4,8,4-g13-path56", "64S25-8,8,4-g17-path12", "64S18-4,4,8-g13-path6", "64S25-8,4,8-g17-path12", "64S25-4,8,8-g17-path12", "64S22-8,8,8-g21-path84", "64S23-4,4,4-g9-path16", "64S23-4,4,4-g9-path17", "64S23-4,4,4-g9-path18" ];
s`SolvableDBChild := "16T10-2,4,4-g1-path10";

/*
Return for eval
*/

return s;
