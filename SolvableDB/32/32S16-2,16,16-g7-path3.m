s := SolvableDBObjectInitialize();

/*
Basic Information about the Passport
*/

s`SolvableDBName := "32S16-2,16,16-g7-path3";
s`SolvableDBFilename := "32S16-2,16,16-g7-path3.m";
s`SolvableDBPathNumber := 3;
s`SolvableDBDegree := 32;
s`SolvableDBABC := \[ 2, 16, 16 ];
s`SolvableDBType := "Hyperbolic";
s`SolvableDBGenus := 7;
s`SolvableDBGaloisOrbitSize := 1;
s`SolvableDBPassportSize := 1;
s`SolvableDBPointedPassportSize := 1;
s`SolvableDBLevel := 5;
s`SolvableDBBlocks := {@ PowerSet(IntegerRing()) |
{ IntegerRing() | 1, 5 },
{ IntegerRing() | 2, 8 },
{ IntegerRing() | 3, 10 },
{ IntegerRing() | 4, 13 },
{ IntegerRing() | 6, 15 },
{ IntegerRing() | 7, 16 },
{ IntegerRing() | 9, 18 },
{ IntegerRing() | 11, 20 },
{ IntegerRing() | 12, 22 },
{ IntegerRing() | 14, 24 },
{ IntegerRing() | 17, 26 },
{ IntegerRing() | 19, 28 },
{ IntegerRing() | 21, 30 },
{ IntegerRing() | 23, 32 },
{ IntegerRing() | 25, 29 },
{ IntegerRing() | 27, 31 }
@};
s`SolvableDBBelyiMapTiming := 81.800p15;
s`SolvableDBSanityCheckTiming := 2.450p15;
s`SolvableDBLocalSanityCheckTiming := 0.260p15;
s`SolvableDBLocalSanityCheckPrime := 8736028057;
s`SolvableDBIsLowGenusOrHyperelliptic := true;
s`SolvableDBIsRamifiedAtEveryLevel := true;

/*
Permutations and Passports
*/

s`SolvableDBGaloisOrbit := [ PowerSequence(PermutationGroup<32 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ]:
 Order := 263130836933693530167218012160000000 >) |
[ PermutationGroup<32 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ]:
 Order := 263130836933693530167218012160000000 > |
[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ],
[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ]
]
];
s`SolvableDBPassport := [ PowerSequence(PermutationGroup<32 |  
\[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ],
\[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
\[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ]:
 Order := 32 >) |
[ PermutationGroup<32 |  
\[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ],
\[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
\[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ]:
 Order := 32 > |
[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ],
[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ]
]
];
s`SolvableDBPointedPassport := [ PowerSequence(PermutationGroup<32 |  
\[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ],
\[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
\[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ]:
 Order := 32 >) |
[ PermutationGroup<32 |  
\[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ],
\[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
\[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ]:
 Order := 32 > |
[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ],
[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ]
]
];
s`SolvableDBMonodromyGroup := PermutationGroup<32 |  
\[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ],
\[ 3, 7, 9, 2, 10, 1, 11, 16, 17, 18, 19, 6, 8, 4, 5, 20, 25, 26, 27, 28, 14, 15, 12, 13, 32, 29, 30, 31, 23, 24, 21, 22 ],
\[ 4, 6, 2, 12, 13, 14, 1, 15, 7, 8, 3, 21, 22, 23, 24, 5, 11, 16, 9, 10, 29, 30, 31, 32, 19, 20, 17, 18, 28, 25, 26, 27 ] >;
s`SolvableDBAutomorphismGroup := PermutationGroup<32 |  
\[ 32, 30, 22, 27, 23, 25, 24, 21, 15, 12, 13, 17, 31, 19, 29, 14, 5, 6, 8, 4, 11, 26, 9, 28, 10, 1, 16, 2, 3, 20, 7, 18 ],
\[ 31, 29, 21, 26, 27, 28, 23, 25, 14, 30, 12, 20, 17, 18, 19, 32, 4, 24, 6, 22, 10, 11, 16, 9, 2, 13, 1, 15, 8, 3, 5, 7 ]:
 Order := 32 >;
s`SolvableDBPointedAutomorphismGroup := PermutationGroup<32 |  
\[ 2, 1, 7, 6, 8, 4, 3, 5, 11, 16, 9, 14, 15, 12, 13, 10, 19, 20, 17, 18, 23, 24, 21, 22, 27, 28, 25, 26, 31, 32, 29, 30 ]:
 Order := 2 >;

/*
Top Level Belyi Curve/Map
*/

f, g := Explode([ PolynomialRing(ext<K|Polynomial(K, [1, 0, 0, 0, 0, 0, 0, 0, 1])> where K is RationalField()) |
[[ RationalField() | 65536/18446181136640901121, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, -262144/18446181136640901121, 0, 0, 0 ], [ RationalField() | -491520/18446181136640901121, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, 573440/18446181136640901121, 0, 0, 0 ], [ RationalField() | 465920/18446181136640901121, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, -279552/18446181136640901121, 0, 0, 0 ], [ RationalField() | -128128/18446181136640901121, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, 45760/18446181136640901121, 0, 0, 0 ], [ RationalField() | 12870/18446181136640901121, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, -2860/18446181136640901121, 0, 0, 0 ], [ RationalField() | -1001/36892362273281802242, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, 273/73784724546563604484, 0, 0, 0 ], [ RationalField() | 455/1180555592745017671744, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, -35/1180555592745017671744, 0, 0, 0 ], [ RationalField() | -15/9444444741960141373952, 0, 0, 0, 0, 0, 0, 0 ], [ RationalField() | 0, 0, 0, 0, 1/18888889483920282747904, 0, 0, 0 ], [ RationalField() | 65537/281470681808896, 0, 0, 0, 0, 0, 0, 0 ]],
[]
]);
X<x1,x2,x3> := HyperellipticCurve([f, g]);
K<nu> := BaseField(X);
s`SolvableDBBelyiCurve := X;
KX<x1, x2> := FunctionField(X);
s`SolvableDBBelyiMap := KX!((281474976710657/281474976710656*x1^16 + 1/4398046511104*nu^4*x1^15 - 15/2199023255552*x1^14 - 35/274877906944*nu^4*x1^13 + 455/274877906944*x1^12 + 273/17179869184*nu^4*x1^11 - 1001/8589934592*x1^10 - 715/1073741824*nu^4*x1^9 + 6435/2147483648*x1^8 + 715/67108864*nu^4*x1^7 - 1001/33554432*x1^6 - 273/4194304*nu^4*x1^5 + 455/4194304*x1^4 + 35/262144*nu^4*x1^3 - 15/131072*x1^2 - 1/16384*nu^4*x1 + 1/65536)/x1^16);

/*
Graph Data
*/

s`SolvableDBPathToPP1 := [ Strings() | "PP1", "2T1-1,2,2-g0-path1", "4T1-1,4,4-g0-path1", "8T1-1,8,8-g0-path1", "16T5-2,8,8-g3-path1", "32S16-2,16,16-g7-path3" ];
s`SolvableDBParents := [ Strings() | "64S26-4,16,16-g21-path3", "64S44-4,16,16-g21-path49", "64S50-2,32,32-g15-path5", "64S50-4,32,32-g23-path5", "64S51-2,32,32-g15-path3", "64S51-4,32,32-g23-path3", "64S29-2,16,16-g13-path3" ];
s`SolvableDBChildren := [ Strings() | "16T5-2,8,8-g3-path1" ];

/*
Return for eval
*/

return s;
