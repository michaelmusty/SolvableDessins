intrinsic SolvableBelyiMaps(s::SolvableDBObject) -> Any, Any, Any
  {Given a SolvableDBObject return the passport, Belyi curves and Belyi maps. If not assigned, then tries to compute them.}
  if assigned s`SolvableDBBelyiCurves and assigned s`SolvableDBBelyiMaps then
    pass := s`SolvableDBPassport;
    curves := s`SolvableDBBelyiCurves;
    maps := s`SolvableDBBelyiMaps;
    assert #pass eq #curves and #curves eq #maps;
    for i in [1..#pass] do
      assert BelyiMapSanityCheck(pass[i], curves[i], maps[i]);
    end for;
    return pass, curves, maps;
  else
    d := s`SolvableDBDegree;
    level := Floor(Log(d)/Log(2));
    error "not implemented yet :(";
  end if;
end intrinsic;
