// X curve downstairs
  sigma2 := [Sym(4) | Id(Sym(4)), (1, 4, 3, 2), (1, 2, 3, 4)];
  F2 := Rationals();
  PX2<x0, x1, x2> := PolynomialRing(F2, 3);
  AA2<x0, x1, x2> := AffineSpace(PX2);
  I2<x0, x1, x2> := ideal< PX2 | [
    x0 - x1^2 - 1,
    x1*x2^2 - 1
  ] >;
  X2<x0, x1, x2> := Curve(AA2, I2);
  X := X2;
// extract square root
  F0 := NumberField(Polynomial([1,0,0,0,1]));
  X := BaseChange(X, F0);
  KX<x0, x1, x2> := FunctionField(X);
  g := (x1^2 + x1)/(x1^2 + 1)*x2 + (1/4*(-F0.1^3 + F0.1)*x1^2 + (-F0.1^3 + F0.1)*x1 + 1/4*(-F0.1^3 + F0.1))/(x1^2 + 1);
  a := Numerator(g);
  b := Denominator(g);
  AffAlg := Parent(a);
// X3 curve upstairs
  sigma3 := [Sym(8) | (1, 5)(2, 6)(3, 7)(4, 8), (1, 6, 3, 8)(2, 7, 4, 5), (1, 4, 3, 2)(5, 8, 7, 6)];
  PX3<x0, x1, x2, x3> := PolynomialRing(F0, 4);
  mp := hom< AffAlg -> PX3 | PX3.1, PX3.2, PX3.3 >;
  AA3<x0, x1, x2, x3> := AffineSpace(PX3);
  I3<x0, x1, x2, x3> := ideal< PX3 | [
    x0 - x1^2 - 1,
    x1*x2^2 - 1,
    mp(a)*x3^2 - mp(b)
  ] >;
  new := ColonIdeal(I3, mp(a));
  Xt := Curve(AA3, new);
  KXt := FunctionField(Xt);
