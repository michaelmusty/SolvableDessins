/*
Level 0: PP1
*/
K := Rationals();
K0<x0> := FunctionField(K);
R0<x0> := RingOfIntegers(K0);
f0 := x0;
P0<x0> := PolynomialRing(K, 1);
AA1<x0> := AffineSpace(P0);
Y0<x0> := Curve(AA1);
X0<z0, w> := ProjectiveClosure(Y0);
KX0<kx0> := FunctionField(X0);

/*
Degree 2
Level 1
X1 -> PP1
Name = 2T1-[2,1,2]-2-11-2-g0
*/
P1<x1> := PolynomialRing(K0);
a1 := x1^2-f0;
K1<x1> := ext< K0 | a1 >;
R1 := IntegralClosure(R0, K1);
I1_0 := ideal< R1 | R1!x0 >;
I1_1 := ideal< R1 | R1!x0-1>;
assert #InfinitePlaces(K1) eq 1;
I1_oo := Ideal(InfinitePlaces(K1)[1]);
pp1_0 := ideal< R1 | x0, x1 >;
pp1_1a := ideal< R1 | x0-1, x1-1>;
pp1_1b := ideal< R1 | x0-1, x1+1>;
pp1_oo := ideal< R1 | x0, x1 >;
D1 := Divisor(pp1_1a) - Divisor(pp1_1b);
LD1, mp1 := RiemannRochSpace(D1);
assert Dimension(LD1) eq 1;
f1 := mp1(LD1.1);

/*
Degree 4
Level 2
X2 -> PP1
sigma = d4t2;
Name = 4T2-[2,2,2]-22-22-22-g0
*/
P2<x2> := PolynomialRing(K1);
a2 := x2^2 - f1;
K2<x2> := ext< K1 | a2 >;
R2 := IntegralClosure(R1, K2);
R2a := IntegralClosure(R0, K2);
assert R2 eq R2a;
assert IsMaximal(R2);
assert #Factorization(Discriminant(R2)) eq 2;
assert Factorization(Discriminant(R2))[1][1] eq pp1_1a;
assert Factorization(Discriminant(R2))[2][1] eq pp1_1b;
I2_0 := ideal< R2 | I1_0 >;
I2_1 := ideal< R2 | I1_1 >;
assert #InfinitePlaces(K2) eq 1;
I2_oo := Ideal(InfinitePlaces(K2)[1]);
pp2_0 := Factorization(I2_0)[1][1];
pp2_1a := ideal< R2 | x0-1, (5*x0^2 - 9*x0 + 4)*x2 + (25/4*x0 - 17/4)*x1 - 11/4*x0 + 3/4 >;
pp2_1b := ideal< R2 | x0-1, (x1 - 6*x0 + 5)*x2 - x1 - 1>;
pp2_oo := Factorization(I2_oo)[1][1];
D2 := Divisor(pp2_0) - Divisor(pp2_oo);
LD2, mp2 := RiemannRochSpace(D2);
assert Dimension(LD2) eq 1;
P3<x3> := PolynomialRing(K2);
f2 := mp2(LD2.1);
a3 := x3^2 - f2;
K3<x3> := ext< K2 | a3 >;
